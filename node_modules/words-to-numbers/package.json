{
  "_args": [
    [
      {
        "raw": "words-to-numbers",
        "scope": null,
        "escapedName": "words-to-numbers",
        "name": "words-to-numbers",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\bigun\\Desktop\\Alan AI news App"
    ]
  ],
  "_from": "words-to-numbers@latest",
  "_id": "words-to-numbers@1.5.1",
  "_inCache": true,
  "_location": "/words-to-numbers",
  "_nodeVersion": "8.9.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/words-to-numbers_1.5.1_1530801413230_0.5516717834953178"
  },
  "_npmUser": {
    "name": "finnfiddle",
    "email": "fitzsimons.finn@gmail.com"
  },
  "_npmVersion": "5.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "words-to-numbers",
    "scope": null,
    "escapedName": "words-to-numbers",
    "name": "words-to-numbers",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/words-to-numbers/-/words-to-numbers-1.5.1.tgz",
  "_shasum": "38e114393742e87620680374cffc06528c1e7e6c",
  "_shrinkwrap": null,
  "_spec": "words-to-numbers",
  "_where": "C:\\Users\\bigun\\Desktop\\Alan AI news App",
  "author": {
    "name": "Finn Fitzsimons",
    "email": "hello@finn.works"
  },
  "bugs": {
    "url": "https://github.com/finnfiddle/words-to-numbers/issues"
  },
  "dependencies": {
    "babel-runtime": "6.x.x",
    "clj-fuzzy": "^0.3.2",
    "its-set": "^1.1.5"
  },
  "description": "convert textual words to numbers with optional fuzzy text matching",
  "devDependencies": {
    "babel-cli": "6.x.x",
    "babel-core": "6.x.x",
    "babel-eslint": "4.x.x",
    "babel-plugin-transform-runtime": "6.x.x",
    "babel-polyfill": "6.x.x",
    "babel-preset-es2015": "6.x.x",
    "babel-preset-stage-2": "6.x.x",
    "chai": "3.x.x",
    "eslint": "1.7.x",
    "eslint-plugin-babel": "2.x.x",
    "its-set": "^1.1.5",
    "mocha": "2.x.x",
    "nodemon": "1.7.x"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-uvz7zSCKmmA7o5f5zp4Z5l24RQhy6HSNu10URhNxQWv1I82RsFaZX3qD07RLFUMJsCV38oAuaca13AvhO+9yGw==",
    "shasum": "38e114393742e87620680374cffc06528c1e7e6c",
    "tarball": "https://registry.npmjs.org/words-to-numbers/-/words-to-numbers-1.5.1.tgz",
    "fileCount": 23,
    "unpackedSize": 62167,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbPi0FCRA9TVsSAnZWagAAmN8P/3O/jVHmHlAJbYw1Sdkd\nN2UhYcvFE57EprDuK1jrAQGfkqUdKwWWvGj9d1xvPLMpexmFvzJ5uU9qgmOD\nw9xTB7f8o5a1V9/+06C/A6a0RtHETZmKREYQMTjlZvCgaBpN4741Kh5ZrHdQ\nHhabHxdnFtZbvRYr+YuCLbgT5GA/J7FHSFL/XNFhzGNwQhYWQ4AE+zdMCink\nLGVDNCFZf91HS5oKLIVAK7UoTagiQFgbV9bwrzSP1829HGsL2/3Ql9MLEOTX\nhFAMbn3r2vcN4Ux0CW/QhNKo6gUy3TjAPrXSYHZrJ0lyZUHIpNJCI+h9Uog0\nG9UeioFiBRJS9VolvlmhUWKT03eD+lt3rX7rN6UYuMsPFpzEbozdLGOyV85s\nFUAXGybRKvvV0/P+RQc3gKUecOhH3Ze+xezlQaT3M4Oq64SAp6GeypS5sclp\nNjJ86iHFHTcyvEsXeoeucJeKEoDDiiMpG2GgavTXT8ox9EYkmWFZff41cjUo\nOoegd+xQst8rFNtI/79jiY4A3nKqdiN9aXHmJyTm3Lkc5X/A5E0KN4L54D23\ntx3DpwqHPyZKKU1kbGivqNsMis+wXxYtF6G0kQVvPU6uiUnnudXR/8+txJ6D\nSi0nDJdWprR9MjMYeuH0AJZybVa3lGNJYWA60+McMQhV3byn3PtcP0MTuFHE\n47gT\r\n=wiCQ\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "9cd3a308f56c2c8fc07912dc315d29a30613b697",
  "homepage": "https://github.com/finnfiddle/words-to-numbers",
  "license": "MIT",
  "maintainers": [
    {
      "name": "finnfiddle",
      "email": "fitzsimons.finn@gmail.com"
    }
  ],
  "name": "words-to-numbers",
  "optionalDependencies": {},
  "options": {
    "mocha": "--require scripts/mocha_runner src/**/__tests__/**/*.js"
  },
  "readme": "# Words To Numbers\n\nConvert words to numbers. Optionally fuzzy match the words to numbers.\n\n```\nnpm install words-to-numbers\n```\n\nIf the whole string passed is a number then it will return a `Number` type otherwise it will return the original string with all instances of numbers replaced.\n\nTODO: Add functionality for parsing mixed numbers and words. PRs welcome.\n\n## Basic Examples\n\n```javascript\nimport wordsToNumbers from 'words-to-numbers';\nwordsToNumbers('one hundred'); //100\nwordsToNumbers('one hundred and five'); //105\nwordsToNumbers('one hundred and twenty five'); //125\nwordsToNumbers('four thousand and thirty'); //4030\nwordsToNumbers('six million five thousand and two'); //6005002\nwordsToNumbers('a thousand one hundred and eleven'); //1111\nwordsToNumbers('twenty thousand five hundred and sixty nine'); //20569\nwordsToNumbers('five quintillion'); //5000000000000000000\nwordsToNumbers('one-hundred'); //100\nwordsToNumbers('one-hundred and five'); //105\nwordsToNumbers('one-hundred and twenty-five'); //125\nwordsToNumbers('four-thousand and thirty'); //4030\nwordsToNumbers('six-million five-thousand and two'); //6005002\nwordsToNumbers('a thousand, one-hundred and eleven'); //1111\nwordsToNumbers('twenty-thousand, five-hundred and sixty-nine'); //20569\n```\n\n## Multiple numbers in a string\n\nReturns a string with all instances replaced.\n\n```javascript\nwordsToNumbers('there were twenty-thousand, five-hundred and sixty-nine X in the five quintillion Y')) // 'there were 20569 X in the 5000000000000000000 Y'\n```\n\n## With Fuzzy Matching\n\nUses [Jaro distance](http://yomguithereal.github.io/clj-fuzzy/javascript.html#jaro) to find the best match for the number words. Don't rely on this being completely accurate...\n\n```javascript\nimport wordsToNumbers from 'words-to-numbers';\nwordsToNumbers('won huntred', {fuzzy: true}); //100\nwordsToNumbers('too thousant and fiev', {fuzzy: true}); //2005\nwordsToNumbers('tree millyon sefen hunderd and twinty sex', {fuzzy: true}); //3000726\n```\n\n## Decimal Points\n\n```javascript\nimport wordsToNumbers from 'words-to-numbers';\nwordsToNumbers('ten point five'); //10.5\nwordsToNumbers('three point one four one five nine two six'); //3.1415926\n```\n\n## Ordinal Numbers\n\n```javascript\nimport wordsToNumbers from 'words-to-numbers';\nwordsToNumbers('first'); //1\nwordsToNumbers('second'); //2\nwordsToNumbers('third'); //3\nwordsToNumbers('fourteenth'); //14\nwordsToNumbers('twenty fifth'); //25\nwordsToNumbers('thirty fourth'); //34\nwordsToNumbers('forty seventh'); //47\nwordsToNumbers('fifty third'); //53\nwordsToNumbers('sixtieth'); //60\nwordsToNumbers('seventy second'); //72\nwordsToNumbers('eighty ninth'); //89\nwordsToNumbers('ninety sixth'); //96\nwordsToNumbers('one hundred and eighth'); //108\nwordsToNumbers('one hundred and tenth'); //110\nwordsToNumbers('one hundred and ninety ninth'); //199\n```\n\n## Commonjs\n\n```javascript\nconst { wordsToNumbers } = require('words-to-numbers');\nwordsToNumbers('one hundred'); //100;\n```\n\n## Implied Hundreds\n\n```javascript\nwordsToNumbers('nineteen eighty four', { impliedHundreds: true }); //1984\nwordsToNumbers('one thirty', { impliedHundreds: true }); //130\nwordsToNumbers('six sixty two', { impliedHundreds: true }); //662\nwordsToNumbers('ten twelve', { impliedHundreds: true }); //1012\nwordsToNumbers('nineteen ten', { impliedHundreds: true }); //1910\nwordsToNumbers('twenty ten', { impliedHundreds: true }); //2010\nwordsToNumbers('twenty seventeen', { impliedHundreds: true }); //2017\nwordsToNumbers('twenty twenty', { impliedHundreds: true }); //2020\nwordsToNumbers('twenty twenty one', { impliedHundreds: true }); //2021\nwordsToNumbers('fifty sixty three', { impliedHundreds: true }); //5063\nwordsToNumbers('fifty sixty', { impliedHundreds: true }); //5060\nwordsToNumbers('fifty sixty three thousand', { impliedHundreds: true }); //5063000\nwordsToNumbers('one hundred thousand', { impliedHundreds: true }); //100000\n```",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/finnfiddle/words-to-numbers.git"
  },
  "scripts": {
    "lint": "eslint ./src",
    "lintfix": "eslint ./src --fix",
    "prepublish": "babel --plugins \"transform-runtime\" src --ignore __tests__ --out-dir ./dist",
    "start": "babel --watch --plugins \"transform-runtime\" src --ignore __tests__ --out-dir ./dist",
    "test": "npm run lint && npm run testonly",
    "test-watch": "npm run testonly -- --watch --watch-extensions js",
    "testonly": "mocha $npm_package_options_mocha"
  },
  "version": "1.5.1"
}
